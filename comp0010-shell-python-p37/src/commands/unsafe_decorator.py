"""
Module that contains the Unsafe decorator
"""

from io import TextIOBase

from errors.errors import BaseShellError

from .runnable import Runnable


class UnsafeDecorator(Runnable):
    """
    A decorator that catches all exceptions generated by the underlying
    Runnable while running, and continues anyway.

    Designed to be used with BaseCommand, although it should work with any
    runnable.

    Args:
        wrapped_runnable (Runnable): A runnable to wrap around.
        out_stream (TextIOBase): The output stream of the runnable. This stream
                                 is hijacked in the event of an error thrown by
                                 the runnable
    """
    def __init__(self,
                 wrapped_runnable: Runnable,
                 out_stream: TextIOBase) -> None:
        self.wrapped_runnable = wrapped_runnable
        self.out_stream = out_stream

    def run(self) -> int:
        try:
            return self.wrapped_runnable.run()
        except BaseShellError as e:
            self.out_stream.write(e.message + '\n')
            return 1

    def close(self) -> None:
        self.wrapped_runnable.close()

        # if the child already closed the out_stream, this will do nothing.
        self.out_stream.close()
